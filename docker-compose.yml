version: '3.8'

services:
  # EchoGrid API Service
  echogrid-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://echogrid:secure_password@postgres:5432/echogrid
      - AT_API_KEY=${AT_API_KEY}
      - AT_USERNAME=${AT_USERNAME}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    networks:
      - echogrid-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=echogrid
      - POSTGRES_USER=echogrid
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - echogrid-network

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - echogrid-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - echogrid-api
    restart: unless-stopped
    networks:
      - echogrid-network

# Named volumes for data persistence
volumes:
  postgres_data:
  redis_data:
  uploads:

# Network for service communication
networks:
  echogrid-network:
    driver: bridge